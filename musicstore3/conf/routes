# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index
GET		/inventory					controllers.ProductC.inventory(page:Int ?= 1, sort ?= "name", filter?= "%")
POST	/inventory                  controllers.ProductC.filter
#for strings, no :String, just ?=
#if parameters match default, they don;t show up


GET		/sell						controllers.ProductC.sell
POST	/inventory/added			controllers.ProductC.addToList
POST	/inventory/deleted			controllers.ProductC.delete(id: Int)
POST	/update						controllers.ProductC.update(id: Int)
POST	/inventory/updated			controllers.ProductC.modifyToList

GET		/inventory/all				controllers.ProductC.inventoryAll

GET		/inventory/purchase/:id		controllers.PurchaseC.purchase(id: Int)
POST	/inventory/purchase/:id		controllers.PurchaseC.addToList(id: Int)

GET		/receipt					controllers.PurchaseC.receipt

GET		/dummy						controllers.Application.dummy(message ?= "DUMMY")
GET		/login						controllers.Authentication.login
POST	/login						controllers.Authentication.submit
GET		/logout						controllers.Authentication.logout
GET		/signup						controllers.Authentication.signup
POST	/signup						controllers.Authentication.submitNewUser

GET		/instruments				controllers.InstrumentPage.mainPage
GET		/instruments/getlist		controllers.InstrumentPage.instrumentList
PUT	    /instruments/addEntry		controllers.InstrumentPage.addEntry
PUT     /instruments/addInstrument	controllers.InstrumentPage.addInstrument(name: String)

PUT  	/instruments/like			controllers.InstrumentPage.like(entry_id: Int, user_id: Int)
PUT     /instruments/unlike			controllers.InstrumentPage.unlike(entry_id: Int, user_id: Int)
GET 	/instruments/likes			controllers.InstrumentPage.listOfLikes(entry_id: Int)
GET     /instrument/likersName		controllers.InstrumentPage.likersName(user_id: Int)
GET     /instruments/:id  			controllers.InstrumentPage.details(id: Int)

GET     /chords						controllers.ChordC.chordMain
PUT     /chords/save                controllers.ChordC.saveSong
PUT  	/chords/new 				controllers.ChordC.newSong(user_id: Int)
GET 	/chords/getsong				controllers.ChordC.getSong(song_id: Int)
GET  	/chords/getsongs			controllers.ChordC.getSongs(user_id: Int)
GET 	/chords/delete				controllers.ChordC.deleteSong(song_id: Int)
GET     /chords/render				controllers.ChordC.render(raw: String)



# Javascript routing. MUST BE BEFORE GET /assets/*file
GET     /assets/javascripts/routes          controllers.Application.javascriptRoutes


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)




#DEPRECATED
#POST	/inventory/sorted			controllers.ProductC.sort
#GET	/inventory/:pagenumber		controllers.ProductC.inventorypage(pagenumber: Int)
#POST	/inventory          		controllers.ProductC.pageturn